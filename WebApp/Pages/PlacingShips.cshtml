@page
@using Domain
@using GameSystem
@using GameUI
@model PlacingShipsModel

@{
    ViewBag.Title = "Place ships";
    Layout = "_Layout";
}

<h2>@Model.Player.Name, place your ships</h2>

<form method="post">

    <div class="board">
    <table >
        <tr>
            <br/>
            @for (var i = 0; i < RuleSet.BoardWidth; i++)
            {
                if (i == 0)
                {
                    <td> </td>
                }
                <td class="">@i</td>
            }
        </tr>
        @for (var i = 0; i < RuleSet.BoardHeight; i++)
        {
            <tr>
                <td class="">
                    @i
                </td>
                @for (var j = 0; j < @RuleSet.BoardWidth; j++)
                {
                    var symbol = MainSystem.GetBoardSquareStateSymbol(@Model.Player.GameBoard.Board[i].Row[j].CellStatus);
                    if (Model.Player.GameBoard.Board[i].Row[j].CellStatus == Cell.CellState.Empty)
                    {
                        <td>
                            <svg width="20" height="20">
                                <rect rx="5" ry="5" width="15" height="15" style="fill: rgb(0, 70, 250); stroke-width: 2; stroke: rgb(0, 0, 0)"/>
                            </svg>
                        </td>
                    }
                    else
                    {
                        <td class="game">@symbol</td>
                    }
                }
            </tr>
        }
        
    </table>
    </div>

    
    @if (Model.ShipsNotPlaced.Count != 0)
    {
        <div class="askCord">
        <label>
            <span>
                Ship to place:
                @Model.ShipsNotPlaced[0].Name, length: @Model.ShipsNotPlaced[0].Width

            </span>
        </label>
        <br/>
        <tabel>
            <tr>
                <td>
                    X Coord[letter]: <input asp-for="XCord"/>
                    <span asp-validation-for="XCord"></span>
                    <br/>
                    Y Coord[number]: <input asp-for="YCord"/>
                    <span asp-validation-for="YCord"></span>
                    <br/>
                    Direction[H/V]: <input asp-for="Direction" value="H"/>
                    <span asp-validation-for="Direction"></span>
                    <br/>

                    <input type="submit" name="submit" class="btn" value="Place ship" id="PlaceShip"/>
                </td>
            </tr>
        </tabel>
        </div>
    }
    else
    {
        <span class="alert-danger">All ships have been placed</span>
        <br/>

        var save = GameStorage.Load(@Model.Index);
        if (save.Turn == save.PlayerOne)
        {
            <input type="submit" name="submit" class="btn" value="Next Player" id="NextPlayer"/>
        }
        else
        {
            <input type="submit" name="submit" class="btn" value="Play" id="Play"/>
        }
    }
    <input type="hidden" asp-for="Index" value="@Model.Index"/>

</form>

@section scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}